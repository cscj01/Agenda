@model AgendaContato.Models.Contato

@{
    ViewBag.Title = "Editar";
}

<h2>Edição do Contato</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Contato</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sobrenome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sobrenome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sobrenome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefones, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-2">
                    <button class="btn btn-primary form-control" id="btn-add-telefone">Novo Telefone</button>
                </div>
                <div class="col-md-8" id="div-telefones">
                    @if (Model.Telefones != null)
                    {
                        for (int i = 0; i < Model.Telefones.Count; i++)
                        {
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.HiddenFor(model => model.Telefones[i].Id, new {@class = "hid-id"})
                                    @Html.EditorFor(model => model.Telefones[i].Ddd, new {htmlAttributes = new {@class = "form-control txt-ddd"}})
                                </div>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Telefones[i].Numero, new {htmlAttributes = new {@class = "form-control txt-numero"}})
                                </div>
                                <div class="col-md-3">
                                    @Html.EnumDropDownListFor(model => model.Telefones[i].Tipo, new {@class = "form-control sel-tipoNumero"})
                                </div>
                                <div class="col-md-1">
                                    <button class="btn btn-danger btn-remover-telefone" data-id="@Model.Telefones[i].Id">
                                        <span class="glyphicon glyphicon-trash"></span>
                                    </button>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Emails, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-2">
                    <button class="btn btn-primary form-control" id="btn-add-email">Novo E-mail</button>
                </div>
                <div class="col-md-8" id="div-emails">
                    @if (Model.Emails != null)
                    {
                        for (int i = 0; i < Model.Emails.Count; i++)
                        {
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.HiddenFor(model => model.Emails[i].Id, new { @class = "hid-id" })
                                </div>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Emails[i].EnderecoEmail, new { htmlAttributes = new { @class = "form-control txt-email" } })
                                </div>
                                <div class="col-md-3">
                                    @Html.EnumDropDownListFor(model => model.Emails[i].Tipo, new { @class = "form-control sel-tipoEmail" })
                                </div>
                                <div class="col-md-1">
                                    <button class="btn btn-danger btn-remover-email" data-id="@Model.Emails[i].Id">
                                        <span class="glyphicon glyphicon-trash"></span>
                                    </button>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar para a Lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/edicao-email.js"></script>
    <script src="~/Scripts/edicao-telefones.js"></script>
}
